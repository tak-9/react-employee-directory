{"version":3,"sources":["components/Nabbar.js","components/TableRow.js","components/EmployeeTable.js","components/SearchForm.js","App.js","index.js"],"names":["Nabbar","className","TableRow","props","d","Date","employee","dob","date","formatted_date","getDate","getMonth","getFullYear","src","picture","thumbnail","alt","name","first","last","phone","email","EmployeeTable","onClick","sortName","style","cursor","sortPhone","sortEmail","sortDOB","employees","map","index","key","SearchForm","onChange","handleInputChange","value","searchKeyword","type","placeholder","App","state","employeesForDisplay","sortNameAsc","sortEmailAsc","sortDOBAsc","sortPhoneAsc","getEmployees","axios","get","then","res","setState","data","results","catch","err","console","log","event","target","filterEmployee","sortNameDecend","sortNameAscend","sortDOBDecend","sortDOBAscend","sortEmailDecend","sortEmailAscend","sortPhoneDecend","sortPhoneAscend","this","filteredEmployees","filter","includes","sortedEmployees","sort","a","b","nameA","toUpperCase","nameB","empA","empB","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ed7a287.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Nabbar(){\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid bg-dark text-white\">\r\n            <div className=\"container\">\r\n            <h1 className=\"display-4\">Employee Directory</h1>\r\n            <p className=\"lead\">Click on carrots to filter by heading or use the search box to narrow your results.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nabbar;","import React from \"react\";\r\n\r\nfunction TableRow(props){\r\n    var d = new Date(props.employee.dob.date);\r\n    var formatted_date = d.getDate() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getFullYear()\r\n    // console.log(formatted_date)\r\n\r\n    return (\r\n        <tr>\r\n            <td><img src={props.employee.picture.thumbnail} alt=\"employee\" /> </td> \r\n            <td>{props.employee.name.first} {props.employee.name.last}</td>\r\n            <td>{props.employee.phone}</td>\r\n            <td>{props.employee.email}</td>\r\n            <td>{formatted_date}</td>            \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow;","import React from \"react\";\r\nimport TableRow from \"./TableRow\"\r\n\r\nfunction EmployeeTable(props){\r\n    return (\r\n        <table className=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Image</th>\r\n                    <th>Name&ensp;\r\n                        <span onClick={props.sortName} style={{cursor: \"pointer\"}}><i className=\"fa fa fa-sort\"></i></span>\r\n                    </th>\r\n                    <th>Phone&ensp;\r\n                        <span onClick={props.sortPhone} style={{cursor: \"pointer\"}}><i className=\"fa fa fa-sort\"></i></span>\r\n                    </th>\r\n                    <th>Email&ensp;\r\n                        <span onClick={props.sortEmail} style={{cursor: \"pointer\"}}><i className=\"fa fa fa-sort\"></i></span>\r\n                    </th>\r\n                    <th>DOB&ensp;\r\n                        <span onClick={props.sortDOB} style={{cursor: \"pointer\"}}><i className=\"fa fa fa-sort\"></i></span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.employees.map((employee, index) => \r\n                    <TableRow key={index} employee={employee}/>\r\n                    )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default EmployeeTable;","import React from \"react\";\r\n\r\nfunction SearchForm(props){\r\n    return (\r\n        <div>\r\n            <form> \r\n                <input \r\n                    onChange={props.handleInputChange}\r\n                    value={props.searchKeyword} \r\n                    name=\"searchKeyword\" \r\n                    type=\"text\"\r\n                    placeholder=\"Enter Name to Search\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport Nabbar from \"./components/Nabbar\"\nimport EmployeeTable from \"./components/EmployeeTable\"\nimport SearchForm from \"./components/SearchForm\"\n\nclass App extends Component {\n    state = {\n        employees: [], // Do not modify 'employees' after employees are assinged by API call as it is for keeping original data. \n        employeesForDisplay: [], // employeesForDisplay is displayed in <EmployeeTable />.  \n        searchKeyword: \"\",\n        sortNameAsc: false,\n        sortEmailAsc: false,\n        sortDOBAsc: false,\n        sortPhoneAsc: false\n    }\n\n    componentDidMount() { \n        this.getEmployees();\n    }\n\n    getEmployees = () => {\n        const url = \"https://randomuser.me/api/?results=20\";\n        axios.get(url)\n        .then((res) => {\n            this.setState( {employees: res.data.results} );\n            this.setState( {employeesForDisplay: res.data.results} );\n        })\n        .catch((err)=>{\n            console.log(\"Error in getting employee data\", err);\n            this.setState( {employees: []} );\n            this.setState({employeesForDisplay: []})\n        });\n    }\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        console.log(\"handleInputChange value\",value);\n        this.setState({searchKeyword: value}, () => this.filterEmployee())\n    }\n\n    // This filters employees using searchKeyword. Then, assign it to employeesForDisplay state.\n    filterEmployee() {\n        let filteredEmployees = this.state.employees.filter((employee) => {\n            let fullName = employee.name.first + \" \" + employee.name.last;\n            return (fullName.includes(this.state.searchKeyword));\n        });\n        this.setState({employeesForDisplay: filteredEmployees});\n    }\n\n    sortName = event => {\n        //console.log(\"sort\");\n        if (this.state.sortNameAsc) {\n            this.sortNameDecend();\n        } else {\n            this.sortNameAscend();\n        }\n    }\n\n    sortNameAscend() {\n        //console.log(\"sortNameAscend()\"); \n        let sortedEmployees = this.state.employees.sort(function(a,b){\n            let nameA = a.name.first.toUpperCase();\n            let nameB = b.name.first.toUpperCase();\n            if (nameA < nameB){\n                return -1;\n            } \n            if (nameA > nameB){\n                return 1;\n            }\n            return 0;\n        })\n        this.setState({sortNameAsc: true});\n        this.setState({sortDOB: true});\n        this.setState({employeesForDisplay: sortedEmployees}) \n    }\n\n    sortNameDecend() {\n        //console.log(\"sortNameDecend()\"); \n        let sortedEmployees = this.state.employees.sort(function(a,b){\n            let nameA = a.name.first.toUpperCase();\n            let nameB = b.name.first.toUpperCase();\n            if (nameA < nameB){\n                return 1;\n            } \n            if (nameA > nameB){\n                return -1;\n            }\n            return 0;\n        })\n        this.setState({sortNameAsc: false});\n        this.setState({employeesForDisplay: sortedEmployees}) \n    }\n\n    sortDOB = event => {\n        if (this.state.sortDOBAsc) {\n            this.sortDOBDecend();\n        } else {\n            this.sortDOBAscend();\n        }\n    }\n\n    sortDOBAscend() {\n        let sortedEmployees = this.state.employees.sort(function(a,b){\n            let empA = new Date(a.dob.date);\n            let empB = new Date(b.dob.date);\n            if (empA < empB){\n                return -1;\n            } \n            if (empA > empB){\n                return 1;\n            }\n            return 0;\n        })\n        this.setState({sortDOBAsc: true});\n        this.setState({employeesForDisplay: sortedEmployees})\n    }\n\n    sortDOBDecend() {\n        let sortedEmployees = this.state.employees.sort(function(a,b){\n            let empA = new Date(a.dob.date);\n            let empB = new Date(b.dob.date);\n            if (empA < empB){\n                return 1;\n            } \n            if (empA > empB){\n                return -1;\n            }\n            return 0;\n        })\n        this.setState({sortDOBAsc: false});\n        this.setState({employeesForDisplay: sortedEmployees})\n    }\n\n    sortEmail = event => {\n        //console.log(\"sortEmail\", this.state.employees)\n        if (this.state.sortEmailAsc) {\n            this.sortEmailDecend();\n        } else {\n            this.sortEmailAscend();\n        }\n    }\n\n    sortEmailAscend() {\n        let sortedEmployees = this.state.employees.sort(function(a,b){\n            let empA = a.email.toUpperCase();\n            let empB = b.email.toUpperCase();\n            if (empA < empB){\n                return -1;\n            } \n            if (empA > empB){\n                return 1;\n            }\n            return 0;\n        })\n        this.setState({sortEmailAsc: true});\n        this.setState({employeesForDisplay: sortedEmployees})\n    }\n\n    sortEmailDecend() {\n        let sortedEmployees = this.state.employees.sort(function(a,b){\n            let empA = a.email.toUpperCase();\n            let empB = b.email.toUpperCase();\n            if (empA < empB){\n                return 1;\n            } \n            if (empA > empB){\n                return -1;\n            }\n            return 0;\n        })\n        this.setState({sortEmailAsc: false});\n        this.setState({employeesForDisplay: sortedEmployees})\n    }\n\n    sortPhone = event => {\n        //console.log(\"sortPhone\", this.state.employees)\n        if (this.state.sortPhoneAsc) {\n            this.sortPhoneDecend();\n        } else {\n            this.sortPhoneAscend();\n        }\n    }\n\n    sortPhoneAscend() {\n        let sortedEmployees = this.state.employees.sort(function(a,b){\n            let empA = a.phone;\n            let empB = b.phone;\n            if (empA < empB){\n                return -1;\n            } \n            if (empA > empB){\n                return 1;\n            }\n            return 0;\n        })\n        this.setState({sortPhoneAsc: true});\n        this.setState({employeesForDisplay: sortedEmployees})\n    }\n\n    sortPhoneDecend() {\n        let sortedEmployees = this.state.employees.sort(function(a,b){\n            let empA = a.phone;\n            let empB = b.phone;\n            if (empA < empB){\n                return 1;\n            } \n            if (empA > empB){\n                return -1;\n            }\n            return 0;\n        })\n        this.setState({sortPhoneAsc: false});\n        this.setState({employeesForDisplay: sortedEmployees})\n    }\n\n\n    render() {\n        //console.log(\"render()\");\n        return (\n            <div>\n                <Nabbar />\n                <SearchForm \n                    searchKeyword={this.state.searchKeyword}\n                    handleInputChange={this.handleInputChange}\n                />\n                <EmployeeTable \n                    employees={this.state.employeesForDisplay}\n                    sortName={this.sortName}\n                    sortPhone={this.sortPhone}\n                    sortEmail={this.sortEmail}\n                    sortDOB={this.sortDOB}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}