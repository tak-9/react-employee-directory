{"version":3,"sources":["sortEmployeesUtil.js","components/Nabbar.js","components/TableRow.js","components/EmployeeTable.js","components/SearchForm.js","App.js","index.js"],"names":["module","exports","sortNameAscend","employees","sort","a","b","nameA","name","first","toUpperCase","nameB","sortNameDecend","sortDOBAscend","empA","Date","dob","date","empB","sortDOBDecend","sortEmailAscend","email","sortEmailDecend","sortPhoneAscend","phone","sortPhoneDecend","Nabbar","className","TableRow","props","d","employee","formatted_date","getDate","getMonth","getFullYear","src","picture","thumbnail","alt","last","EmployeeTable","onClick","sortName","style","cursor","sortPhone","sortEmail","sortDOB","map","index","key","SearchForm","onChange","handleInputChange","value","searchKeyword","type","placeholder","App","state","isLoading","isAPIError","employeesForDisplay","sortNameAsc","sortEmailAsc","sortDOBAsc","sortPhoneAsc","getEmployees","axios","get","then","res","setState","data","results","catch","err","console","log","event","target","filterEmployee","this","filteredEmployees","filter","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63001b9e.chunk.js","sourcesContent":["var sortNameAscend = function(employees) {\r\n    //console.log(\"sortNameAscend()\"); \r\n    let sortedEmployees = employees.sort(function(a,b){\r\n        let nameA = a.name.first.toUpperCase();\r\n        let nameB = b.name.first.toUpperCase();\r\n        if (nameA < nameB){\r\n            return -1;\r\n        } \r\n        if (nameA > nameB){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n    return sortedEmployees;\r\n}\r\n\r\nvar sortNameDecend = function(employees) {\r\n    //console.log(\"sortNameDecend()\"); \r\n    let sortedEmployees = employees.sort(function(a,b){\r\n        let nameA = a.name.first.toUpperCase();\r\n        let nameB = b.name.first.toUpperCase();\r\n        if (nameA < nameB){\r\n            return 1;\r\n        } \r\n        if (nameA > nameB){\r\n            return -1;\r\n        }\r\n        return 0;\r\n    })\r\n    return sortedEmployees;\r\n}\r\n\r\nvar sortDOBAscend = function(employees) {\r\n    let sortedEmployees = employees.sort(function(a,b){\r\n        let empA = new Date(a.dob.date);\r\n        let empB = new Date(b.dob.date);\r\n        if (empA < empB){\r\n            return -1;\r\n        } \r\n        if (empA > empB){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n    return sortedEmployees;\r\n}\r\n\r\nvar sortDOBDecend = function(employees) {\r\n    let sortedEmployees = employees.sort(function(a,b){\r\n        let empA = new Date(a.dob.date);\r\n        let empB = new Date(b.dob.date);\r\n        if (empA < empB){\r\n            return 1;\r\n        } \r\n        if (empA > empB){\r\n            return -1;\r\n        }\r\n        return 0;\r\n    })\r\n    return sortedEmployees;\r\n}\r\n\r\nvar sortEmailAscend = function(employees) {\r\n    let sortedEmployees = employees.sort(function(a,b){\r\n        let empA = a.email.toUpperCase();\r\n        let empB = b.email.toUpperCase();\r\n        if (empA < empB){\r\n            return -1;\r\n        } \r\n        if (empA > empB){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n    return sortedEmployees;\r\n}\r\n\r\nvar sortEmailDecend = function(employees) {\r\n    let sortedEmployees = employees.sort(function(a,b){\r\n        let empA = a.email.toUpperCase();\r\n        let empB = b.email.toUpperCase();\r\n        if (empA < empB){\r\n            return 1;\r\n        } \r\n        if (empA > empB){\r\n            return -1;\r\n        }\r\n        return 0;\r\n    })\r\n    return sortedEmployees;\r\n}\r\n\r\n\r\nvar sortPhoneAscend = function(employees) {\r\n    let sortedEmployees = employees.sort(function(a,b){\r\n        let empA = a.phone;\r\n        let empB = b.phone;\r\n        if (empA < empB){\r\n            return -1;\r\n        } \r\n        if (empA > empB){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n    return sortedEmployees;\r\n}\r\n\r\nvar sortPhoneDecend = function(employees) {\r\n    let sortedEmployees = employees.sort(function(a,b){\r\n        let empA = a.phone;\r\n        let empB = b.phone;\r\n        if (empA < empB){\r\n            return 1;\r\n        } \r\n        if (empA > empB){\r\n            return -1;\r\n        }\r\n        return 0;\r\n    })\r\n    return sortedEmployees;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    sortNameAscend: sortNameAscend,\r\n    sortNameDecend: sortNameDecend,\r\n    sortDOBAscend: sortDOBAscend,\r\n    sortDOBDecend: sortDOBDecend,\r\n    sortEmailAscend: sortEmailAscend,\r\n    sortEmailDecend: sortEmailDecend,\r\n    sortPhoneAscend: sortPhoneAscend,\r\n    sortPhoneDecend: sortPhoneDecend\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Nabbar(){\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid bg-dark text-white\">\r\n            <div className=\"container\">\r\n            <h1 className=\"display-4\">Employee Directory</h1>\r\n            <p className=\"lead\">Click on an arrow to sort by heading or use the search box to narrow your results.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nabbar;","import React from \"react\";\r\n\r\nfunction TableRow(props){\r\n    var d = new Date(props.employee.dob.date);\r\n    var formatted_date = d.getDate() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getFullYear()\r\n    // console.log(formatted_date)\r\n\r\n    return (\r\n        <tr>\r\n            <td><img src={props.employee.picture.thumbnail} alt=\"employee\" /> </td> \r\n            <td>{props.employee.name.first} {props.employee.name.last}</td>\r\n            <td>{props.employee.phone}</td>\r\n            <td>{props.employee.email}</td>\r\n            <td>{formatted_date}</td>            \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow;","import React from \"react\";\r\nimport TableRow from \"./TableRow\"\r\n\r\nfunction EmployeeTable(props){\r\n    return (\r\n        <table className=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Image</th>\r\n                    <th>Name&ensp;\r\n                        <span onClick={props.sortName} style={{cursor: \"pointer\"}}><i className=\"fa fa fa-sort\"></i></span>\r\n                    </th>\r\n                    <th>Phone&ensp;\r\n                        <span onClick={props.sortPhone} style={{cursor: \"pointer\"}}><i className=\"fa fa fa-sort\"></i></span>\r\n                    </th>\r\n                    <th>Email&ensp;\r\n                        <span onClick={props.sortEmail} style={{cursor: \"pointer\"}}><i className=\"fa fa fa-sort\"></i></span>\r\n                    </th>\r\n                    <th>DOB&ensp;\r\n                        <span onClick={props.sortDOB} style={{cursor: \"pointer\"}}><i className=\"fa fa fa-sort\"></i></span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.employees.map((employee, index) => \r\n                    <TableRow key={index} employee={employee}/>\r\n                    )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default EmployeeTable;","import React from \"react\";\r\n\r\nfunction SearchForm(props){\r\n    return (\r\n        <div>\r\n            <form> \r\n                <input \r\n                    onChange={props.handleInputChange}\r\n                    value={props.searchKeyword} \r\n                    name=\"searchKeyword\" \r\n                    type=\"text\"\r\n                    placeholder=\"Enter Name to Search\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport Nabbar from \"./components/Nabbar\";\nimport EmployeeTable from \"./components/EmployeeTable\";\nimport SearchForm from \"./components/SearchForm\";\nimport {sortNameAscend, sortNameDecend, sortDOBAscend, \n        sortDOBDecend, sortEmailAscend, sortEmailDecend, \n        sortPhoneAscend, sortPhoneDecend} from \"./sortEmployeesUtil\";\n\nclass App extends Component {\n    state = {\n        isLoading: true,\n        isAPIError: false,\n        employees: [], // Do not modify 'employees' after employees are assinged by API call as it is for keeping original data. \n        employeesForDisplay: [], // employeesForDisplay is displayed in <EmployeeTable />.  \n        searchKeyword: \"\",\n        sortNameAsc: true,\n        sortEmailAsc: true,\n        sortDOBAsc: true,\n        sortPhoneAsc: true\n    }\n\n    componentDidMount() {\n        this.getEmployees();\n    }\n\n    getEmployees = () => {\n        const url = \"https://randomuser.me/api/?results=20\";\n        axios.get(url)\n        .then((res) => {\n            this.setState({\n                employees: res.data.results, \n                employeesForDisplay: res.data.results,\n                isLoading: false\n            });\n        })\n        .catch((err)=>{\n            console.log(\"Error in getting employee data\", err);\n            this.setState({\n                employees: [],\n                employeesForDisplay: [],\n                isAPIError: true,\n                isLoading: false\n            });\n        });\n    }\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        console.log(\"handleInputChange value\",value);\n        this.setState({searchKeyword: value}, () => this.filterEmployee())\n    }\n\n    // This filters employees using searchKeyword. Then, assign it to employeesForDisplay state.\n    filterEmployee() {\n        let filteredEmployees = this.state.employees.filter((employee) => {\n            let fullName = employee.name.first + \" \" + employee.name.last;\n            return (fullName.includes(this.state.searchKeyword));\n        });\n        this.setState({employeesForDisplay: filteredEmployees});\n    }\n\n    sortName = event => {\n        if (this.state.sortNameAsc) {\n            this.setState({\n                employeesForDisplay: sortNameAscend(this.state.employees),\n                sortNameAsc: false});\n        } else {\n            this.setState({\n                employeesForDisplay: sortNameDecend(this.state.employees),\n                sortNameAsc: true});\n        }\n    }\n\n    sortDOB = event => {\n        if (this.state.sortDOBAsc) {\n            this.setState({\n                employeesForDisplay: sortDOBAscend(this.state.employees),\n                sortDOBAsc: false});\n        } else {\n            this.setState({\n                employeesForDisplay: sortDOBDecend(this.state.employees),\n                sortDOBAsc: true});\n        }\n    }\n\n    sortEmail = event => {\n        if (this.state.sortEmailAsc) {\n            this.setState({\n                employeesForDisplay: sortEmailAscend(this.state.employees),\n                sortEmailAsc: false});\n        } else {\n            this.setState({\n                employeesForDisplay: sortEmailDecend(this.state.employees),\n                sortEmailAsc: true});\n        }\n    }\n\n    sortPhone = event => {\n        if (this.state.sortPhoneAsc) {\n            this.setState({\n                employeesForDisplay: sortPhoneAscend(this.state.employees),\n                sortPhoneAsc: false});\n        } else {\n            this.setState({\n                employeesForDisplay: sortPhoneDecend(this.state.employees),\n                sortPhoneAsc: true});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Nabbar />\n                <SearchForm \n                    searchKeyword={this.state.searchKeyword}\n                    handleInputChange={this.handleInputChange}\n                />\n                { this.state.isLoading ? <h4>Loading...</h4>:\n                <EmployeeTable \n                    employees={this.state.employeesForDisplay}\n                    sortName={this.sortName}\n                    sortPhone={this.sortPhone}\n                    sortEmail={this.sortEmail}\n                    sortDOB={this.sortDOB}\n                /> }\n                { this.state.isAPIError? <h4>Error in getting employee data.</h4>: '' }\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}